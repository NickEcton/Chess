exit
d.render
c
s
d.render
d = Display.new(board_dup)
d.render
b = Board.new
d.render
d = Display.new(board_dup)
c
display x 
display y
c
s
c
s
c
s
result 
result
s
ss
s
ss
s
ss
s
display pos
display king_pos
display @grid[y][x].move_dirs
c
n
c
exit
s
n
nn
n
s
n
c
s
@board[forward]
s
@grid[y][x].move_dirs
exit
c
s
a
display self.pos[1] + 1
display self.pos[0] - 1
s
display @board[[self.pos[0] - 1, self.pos[1] + 1]].color
s
display @board[[self.pos[0] - 1, self.pos[1] + 1]]
s
@board[[self.pos[0] - 1, self.pos[1] + 1]]
s
@board[[self.pos[0] - 1, self.pos[1] + 1]]
s
c
s
c
self
s
c
s
c
exit
s
king_pos
s
ss
s
c
s
ss
s
sc
s
pos_moves
s
c
s
display king_pos
display pos
s
king_pos
s
new_pos
s
p new_pos
s
display result
s
ss
s
c
exit
@grid[y][x]
s
@grid[5][0]
s
@grid[5][2]
pos
s
display @grid[row][col]
s
display new_pos
s
display result 
s
y
s
c
exit
ss
s
king_pos
pos
s
display new_pos
display result 
self.to_s
s
self
s
display x 
display y
display @grid[y][x].to_s
s
display @grid[y][x]
s
c
n
s
king_pos
s
king_pos
s
exit
s
king_pos
s
exit
s
exit
king_pos
s
color
c
exit
@board[[self.pos[0] - 1, self.pos[1] + 1]]
@board(self.pos[0] - 1, self.pos[1] + 1)
[self.pos[0]-1,self.pos[1]+1]
[self.pos[1]+1]
[self.pos[0]-1]
@board[self.pos[0] - 1, self.pos[1] + 1]
s
@board
s
c
n
s
c
s
c
s
exit
new_pos
s
result
s
new_pos
s
diff[1]
diff
s
move_diffs
self.pos
self
